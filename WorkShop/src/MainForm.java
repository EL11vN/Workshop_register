import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author CHRIS LOPEZ
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel tfAddress = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        tfPhone = new javax.swing.JTextField();
        tfWT = new javax.swing.JTextField();
        tfRD = new javax.swing.JTextField();
        javax.swing.JButton btnClear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfPName = new javax.swing.JTextField();
        tfPID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel tfAddress2 = new javax.swing.JLabel();
        tfPS = new javax.swing.JTextField();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        tfLoc = new javax.swing.JTextField();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tableClients = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        javax.swing.JButton btnDelete = new javax.swing.JButton();
        javax.swing.JButton btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DashBoard");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Vivaldi", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Custom-Icon-Design-Pretty-Office-13-Users.64.png"))); // NOI18N
        jLabel1.setText("List of Workshops");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Workshop Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email:");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Phone:");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Workshop Title:");

        tfAddress.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        tfAddress.setForeground(new java.awt.Color(255, 255, 255));
        tfAddress.setText("Registration Date:");

        tfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEmailActionPerformed(evt);
            }
        });

        tfPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPhoneActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 204, 255));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Seanau-Email-Clear.32.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Oxygen-Icons.org-Oxygen-Devices-secure-card.32.png"))); // NOI18N
        jLabel5.setText("Participant ID:");

        tfPName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPNameActionPerformed(evt);
            }
        });

        tfPID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPIDActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Participant Name:");

        tfAddress2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        tfAddress2.setForeground(new java.awt.Color(255, 255, 255));
        tfAddress2.setText("Payment Status:");

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Location:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfEmail)
                            .addComponent(tfPhone)
                            .addComponent(tfWT)
                            .addComponent(tfRD)
                            .addComponent(tfPS)
                            .addComponent(tfPName)
                            .addComponent(tfPID)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                            .addComponent(tfLoc)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(tfAddress))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(tfAddress2)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfWT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfAddress2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tableClients.setAutoCreateRowSorter(true);
        tableClients.setBackground(new java.awt.Color(255, 255, 204));
        tableClients.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tableClients.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        tableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Participant_ID", "Name", "Email", "Phone", "Workshop", "Location", "Register Date", "Payment"
            }
        ));
        tableClients.setMinimumSize(new java.awt.Dimension(300, 80));
        jScrollPane1.setViewportView(tableClients);

        btnSearch.setBackground(new java.awt.Color(204, 255, 255));
        btnSearch.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 18)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Hopstarter-Gloss-Mac-Zoom.32.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-delete-32.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 153, 51));
        btnAdd.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 18)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Oxygen-Icons.org-Oxygen-Actions-list-add.32.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 204));
        btnUpdate.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 18)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Oxygen-Icons.org-Oxygen-Actions-edit-redo.32 (1).png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEmailActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       Connection conn = DBConnection.getConnection();
        if (conn != null) {
       try {
        // Get the selected rows
        int[] selectedRows = tableClients.getSelectedRows();

        if (selectedRows.length > 0) {
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete the selected participants?",
                    "Confirm Deletion",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                StringBuilder sql = new StringBuilder("DELETE FROM participants WHERE Participant_ID IN (");
                for (int i = 0; i < selectedRows.length; i++) {
                    int Participant_ID = Integer.parseInt(tableClients.getValueAt(selectedRows[i], 0).toString());
                    sql.append(Participant_ID).append(",");
                }
                sql.deleteCharAt(sql.length() - 1); // Remove the trailing comma
                sql.append(")");

                PreparedStatement pstmt = conn.prepareStatement(sql.toString());
                int rowsDeleted = pstmt.executeUpdate();

                if (rowsDeleted > 0) {
                    System.out.println("Selected Participant deleted successfully!");
                    DefaultTableModel model = (DefaultTableModel) tableClients.getModel();
                    for (int i = selectedRows.length - 1; i >= 0; i--) {
                        model.removeRow(selectedRows[i]);
                    }
                    JOptionPane.showMessageDialog(this, "Selected Participant deleted successfully!");
                } else {
                    System.out.println("No records found with the specified IDs");
                }
                pstmt.close();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please select one or more rows to delete.",
                    "No rows selected",
                    JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBConnection.closeConnection(conn);
    }

          
        }           
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
         Connection conn = DBConnection.getConnection();
        if(conn !=null);
        
                                        //textfields
         
         String Participant_Name    = tfPName.getText();
        String email                = tfEmail.getText();
        String  phone               = tfPhone.getText();
        String Workshop_Title       = tfWT.getText();
        String Location             = tfLoc.getText();
        String Registration_Date    = tfRD.getText();
        String Payment_Status       = tfPS.getText();

    // blank spaces
    if ( Participant_Name.isEmpty() || email.isEmpty() || phone.isEmpty() || Workshop_Title.isEmpty() || Location.isEmpty() || Registration_Date.isEmpty()|| Payment_Status.isEmpty()) {
        JOptionPane.showMessageDialog(this,
                "Please fill in all the required fields",
                "Missing Information",
                JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Prepare and execute the SQL statement
        String sql = "INSERT INTO participants(Participant_Name,  email, phone, Workshop_Title, Location, Registration_Date, Payment_Status) VALUES (?, ?, ?, ?, ?, ?, ?)";
        
        PreparedStatement pstmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        
        
        pstmt.setString(1, Participant_Name);
        pstmt.setString(2, email);
        pstmt.setString(3, phone);
        pstmt.setString(4, Workshop_Title);
        pstmt.setString(5, Location);
        pstmt.setString(6, Registration_Date);
        pstmt.setString(7, Payment_Status);
        
        int rowsInserted = pstmt.executeUpdate();
            //Added participant
        if (rowsInserted > 0) {
            ResultSet generatedKeys = pstmt.getGeneratedKeys();
        if (generatedKeys.next()){
            int Participant_ID = generatedKeys.getInt(1);
            JOptionPane.showMessageDialog(this,"A new Participant ID: "+ Participant_ID + " was added successfully!" );
            System.out.println("A new Participant ID: "+ Participant_ID + " was added successfully!");

            DefaultTableModel model = (DefaultTableModel) tableClients.getModel();
            model.addRow(new Object[]{Participant_ID, Participant_Name, email, phone, Workshop_Title,Location, Registration_Date, Payment_Status});

          
            // Clear the text fields
            tfPID.setText("");
            tfPName.setText("");
            tfEmail.setText("");
            tfPhone.setText("");
            tfWT.setText("");
            tfLoc.setText("");
            tfRD.setText("");
            tfPS.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add Participant! Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        pstmt.close();
        } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        System.out.println("SQL Error: " + e.getMessage());
        } finally {
        DBConnection.closeConnection(conn);

    }
    
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // Clear
            tfPID.setText("");
            tfPName.setText("");
            tfEmail.setText("");
            tfPhone.setText("");
            tfWT.setText("");
            tfLoc.setText("");
            tfRD.setText("");
            tfPS.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
   
    
    }//GEN-LAST:event_formWindowOpened

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        
        String Participant_ID =     tfPID.getText();
      String Participant_Name=   tfPName.getText();
         String email =             tfEmail.getText();
         String phone =             tfPhone.getText();
         String Workshop_Title =    tfWT.getText();
         String Location =             tfLoc.getText();
         String Registration_Date=  tfRD.getText();
         String Payment_Status =    tfPS.getText();
      
        
        //Check empty textfields
        if(Participant_ID.isEmpty() ||Participant_Name.isEmpty() || email.isEmpty() || phone.isEmpty() || Workshop_Title.isEmpty() || Location.isEmpty() || Registration_Date.isEmpty()|| Payment_Status.isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again!",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }else {
            int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to update this participant?",
            "Confirm Update",
            JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
            
            //Add row
            DefaultTableModel model = (DefaultTableModel)tableClients.getModel();
            model.setRowCount(0);
            model.addRow(new Object[]{Participant_ID,Participant_Name,email,phone,Workshop_Title, Location, Registration_Date,Payment_Status});
           

        
        try{
            
            String sql = "UPDATE participants SET Participant_Name = ?, email = ?, phone = ?, Workshop_Title = ?, Location =?, Registration_Date = ?, Payment_Status = ?  WHERE Participant_ID = ?";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            
            pstmt.setString(1,tfPName.getText());
            pstmt.setString(2,tfEmail.getText());
            pstmt.setString(3,(tfPhone.getText()));
            pstmt.setString(4,tfWT.getText());
            pstmt.setString(5,tfLoc.getText());
            pstmt.setString(6,tfRD.getText());
            pstmt.setString(7,tfPS.getText());
            pstmt.setInt(8,Integer.parseInt(tfPID.getText()));
            
            int rowsUpdated = pstmt.executeUpdate();
            if(rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this,"A new Participant was Updated successfully!");
                System.out.println("A Participant was updated successfully!\n");
                
                 tfPID.setText("");
            tfPName.setText("");
            tfEmail.setText("");
            tfPhone.setText("");
            tfWT.setText("");
            tfLoc.setText("");
            tfRD.setText("");
            tfPS.setText("");
                
        }else{
                System.out.println("No record found with the specified ID\n");
                
            }
            pstmt.close();
        }catch (SQLException | NumberFormatException e){
            JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Error: " + e.getMessage()) ;
        }finally{
            DBConnection.closeConnection(conn);
        }
        }

                                           
        }
        

        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        Connection conn =DBConnection.getConnection();
        if(conn !=null);
            try{
                String sql;
                PreparedStatement pstmt;
                
                if(tfPID.getText().trim().isEmpty()){
                    sql = "SELECT * FROM participants";
                    pstmt = conn.prepareStatement(sql);
                    
                }else{
                    
                    sql = "SELECT * FROM participants WHERE Participant_ID = ?";
                    pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1,Integer.parseInt(tfPID.getText()));
                }
                
                ResultSet rs = pstmt.executeQuery();
                
                DefaultTableModel model = (DefaultTableModel)tableClients.getModel();
                model.setRowCount(0);
                
                while(rs.next()){
                    
                    int Participant_ID = rs.getInt("Participant_ID");
                    String Participant_Name = rs.getString("Participant_Name");
                    String email = rs.getString("email");
                    String phone = rs.getString("phone");
                    String Workshop_Title = rs.getString("Workshop_Title");
                    String Location = rs.getString("Location");
                    String Registration_Date = rs.getString("Registration_Date");
                    String Payment_Status = rs.getString("Payment_Status");
                    
                    model.addRow(new Object[]{Participant_ID,Participant_Name,email,phone,Workshop_Title,Location,Registration_Date,Payment_Status});
                    
                }
                rs.close();
                pstmt.close();
               
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("SQL Error: " + e.getMessage());
            }finally {
                DBConnection.closeConnection(conn);
            }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void tfPNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPNameActionPerformed

    private void tfPIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPIDActionPerformed

    private void tfPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPhoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable tableClients;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfLoc;
    private javax.swing.JTextField tfPID;
    private javax.swing.JTextField tfPName;
    private javax.swing.JTextField tfPS;
    private javax.swing.JTextField tfPhone;
    private javax.swing.JTextField tfRD;
    private javax.swing.JTextField tfWT;
    // End of variables declaration//GEN-END:variables
}
